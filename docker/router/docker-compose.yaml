version: "3.9"

networks:
  proxy-net:
    driver: bridge

services:
  #  DOCKER_BUILDKIT=0 docker-compose up -d python-dev
  python-dev:
    build: .
    container_name: python-dev
    networks:
      - proxy-net
    volumes:
      - /extra:/py-extra
      - /extra/py-dev:/home/devuser
    environment:
      TZ: Asia/Tokyo
    working_dir: /py-extra
    entrypoint: /bin/bash
    tty: true
    stdin_open: true

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    networks:
      - proxy-net
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      PUID: 1024
      PGID: 1000
      TZ: Asia/Tokyo
    ports:
      - 5432:5432
    volumes:
      - /extra/SYNCTHING/exclude-mobile/BACKUP/router/postgres-backup:/etc/periodic/15min
      - /extra/SYNCTHING/exclude-mobile/BACKUP/router/postgres-backup:/etc/periodic/daily
      - /extra/postgres/data:/var/lib/postgresql/data
      - /extra/postgres/conf:/etc/postgresql
      - /extra/SYNCTHING/exclude-mobile/BACKUP/router/postgres-backup:/backup
    command: >
      sh -c 'crond && syslogd && exec gosu postgres postgres -c config_file=/etc/postgresql/postgresql.conf'
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /extra/portainer:/data

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
      - "8443:443/udp" # Required for HTTP/3
    volumes:
      - ./caddy/etc:/etc/caddy
      - /extra/data:/data

