version: "3.5"
services:

# ============= community maintained images ======================
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer
    restart: always
#    command: -H unix:///var/run/docker.sock --admin-password-file /data/passwd
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
      - ${USERDIR}/docker/shared:/shared
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ

#  calibre:
#    image: linuxserver/calibre-web
#    container_name: calibre
#    hostname: calibre
#    restart: always
#    ports:
#      - 8083:8083
#    volumes:
#      - /media/data/calibre-books/config:/config
#      - /media/data/calibre-books/lib:/books
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - TZ=${TZ}


# Transmission – Bittorrent Downloader
# https://hub.docker.com/r/lsioarmhf/transmission
# docker logs -f transmission
# docker exec -it transmission /bin/bash
  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    hostname: transmission
    restart: always
    #cpus: 1.2 # for 4 cores: 1.2/4=30%
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    volumes:
      - /volumeUSB1/usbshare/transmission-daemon:/config
      - /volumeUSB1/usbshare/incoming:/downloads
      - /volumeUSB1/usbshare/watch:/watch
      - /volumeUSB1/usbshare/shared:/shared
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ

# Indexer
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      AUTO_UPDATE: "true" #optional
    volumes:
      - /volume1/Vault/docker/jackett:/config
      - /volumeUSB1/usbshare/downloads:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped

# TV shows
  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - /volume1/Vault/docker/sonarr:/config
      - /volumeUSB1/usbshare/downloads:/downloads
      - /volumeUSB1/usbshare/staging/TV:/tv
      - /volumeUSB1/usbshare/watch:/watch
    ports:
      - 8989:8989
    restart: unless-stopped


# Radarr – Movie Download and Management
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    hostname: radarr
    restart: always
    ports:
      - 7878:7878
    volumes:
      # config mount will fail if the host dir has a NFS mount on it
      # https://github.com/linuxserver/docker-radarr/issues/30
      - /volume1/docker/radarr:/config
      - /volumeUSB1/usbshare/downloads:/downloads
      - /volume1/Movie-TV/Movie:/movies
      - /volumeUSB1/usbshare/watch:/watch
      - /volumeUSB1/usbshare/shared:/shared
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ

  calibre-web:
    image: ghcr.io/linuxserver/calibre-web
    container_name: calibre-web
    environment:
      DOCKER_MODS: linuxserver/calibre-web:calibre
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - /volume1/Vault/docker/calibre:/config
      - /volume1/NetBackup/CalibreLib:/books
    ports:
      - 8083:8083
    restart: unless-stopped


  nginx:
    image: nginx
    container_name: nginx
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - /volume1/Vault/docker/nginx/finance-ng:/finance-ng:ro
      - /volume1/Vault/work/home-server/docker/nas/nginx/finance.conf:/etc/nginx/conf.d/finance.conf:ro
      - /volume1/Vault/docker/nginx/home:/usr/share/nginx/html:ro
    ports:
      - 8000:80
    command: [nginx-debug, '-g', 'daemon off;']
#  photoprism:
#    image: photoprism/photoprism:latest
#    restart: unless-stopped
#    # Uncomment and edit the following line to set a specific user / group id:
#    # user: "1000:1000"
#    security_opt:
#      - seccomp:unconfined
#      - apparmor:unconfined
#    ports:
#      - 2342:2342 # [local port]:[container port]
#    # Uncomment the following lines to enable regular health checks (causes automatic restarts):
#    # healthcheck:
#    #   test: ["CMD", "photoprism", "status"]
#    #   interval: 60s
#    #   timeout: 15s
#    #   retries: 5
#    #
#    # Run "photoprism help" and "photoprism config" too see all config options and current values:
#    environment: # Run "photoprism help" and "photoprism config" too see all config options and current values
#      PHOTOPRISM_ADMIN_PASSWORD: "java2"     # Initial admin password: PLEASE CHANGE!
#      PHOTOPRISM_DEBUG: "false"                      # Run in debug mode (shows additional log messages)
#      PHOTOPRISM_PUBLIC: "false"                     # No authentication required (disables password protection)
#      PHOTOPRISM_READONLY: "false"                   # Don't modify originals directory (reduced functionality)
#      PHOTOPRISM_UPLOAD_NSFW: "true"                 # Allow uploads that MAY be offensive
#      PHOTOPRISM_DETECT_NSFW: "false"                # Flag photos as private that MAY be offensive
#      PHOTOPRISM_EXPERIMENTAL: "false"               # Enable experimental features
#      PHOTOPRISM_SITE_URL: "http://localhost:2342/"  # Canonical / public site URL
#      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
#      PHOTOPRISM_SITE_CAPTION: "Browse Your Life"
#      PHOTOPRISM_SITE_DESCRIPTION: ""
#      PHOTOPRISM_SITE_AUTHOR: ""
#      PHOTOPRISM_HTTP_HOST: "0.0.0.0"
#      PHOTOPRISM_HTTP_PORT: 2342
#      PHOTOPRISM_SETTINGS_HIDDEN: "false"            # Users can not view or change settings
#      PHOTOPRISM_DATABASE_DRIVER: "sqlite"           # SQLite is an embedded database that doesn't require a server
#      # PHOTOPRISM_DATABASE_DRIVER: "mysql"          # Use MariaDB (or MySQL) instead of SQLite for improved performance
#      # PHOTOPRISM_DATABASE_DSN: "photoprism:insecure@tcp(mariadb:3306)/photoprism?charset=utf8mb4,utf8&parseTime=true"
#      PHOTOPRISM_SIDECAR_JSON: "true"                # Automatically create JSON sidecar files using Exiftool
#      PHOTOPRISM_SIDECAR_YAML: "true"                # Automatically backup metadata to YAML sidecar files
#      PHOTOPRISM_THUMB_FILTER: "lanczos"             # Resample filter, best to worst: blackman, lanczos, cubic, linear
#      PHOTOPRISM_THUMB_UNCACHED: "false"             # Enable on-demand thumbnail rendering (high memory and cpu usage)
#      PHOTOPRISM_THUMB_SIZE: 2048                    # Pre-rendered thumbnail size limit (default 2048, min 720, max 7680)
#      # PHOTOPRISM_THUMB_SIZE: 4096                  # Retina 4K, DCI 4K (requires more storage); 7680 for 8K Ultra HD
#      PHOTOPRISM_THUMB_SIZE_UNCACHED: 7680           # On-demand rendering size limit (default 7680, min 720, max 7680)
#      PHOTOPRISM_JPEG_SIZE: 7680                     # Size limit for converted image files in pixels (720-30000)
#      PHOTOPRISM_JPEG_QUALITY: 92                    # Set to 95 for high-quality thumbnails (25-100)
#      PHOTOPRISM_DARKTABLE_PRESETS: "false"          # Use darktable presets (disables concurrent raw to jpeg conversion)
#      # You may optionally set user, group and/or file permissions using environment variables:
#      #UID: 1000
#      #GID: 100
#      # UMASK: 0000
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - TZ=${TZ}
#      - PHOTOPRISM_ADMIN_PASSWORD=java2     # Initial admin password: PLEASE CHANGE!
#      - PHOTOPRISM_DEBUG=false                      # Run in debug mode (shows additional log messages)
#      - PHOTOPRISM_PUBLIC=false                     # No authentication required (disables password protection)
#      - PHOTOPRISM_READONLY=false                   # Don't modify originals directory (reduced functionality)
#      - PHOTOPRISM_UPLOAD_NSFW=true                 # Allow uploads that MAY be offensive
#      - PHOTOPRISM_DETECT_NSFW=false                # Flag photos as private that MAY be offensive
#      - PHOTOPRISM_EXPERIMENTAL=false               # Enable experimental features
#      - PHOTOPRISM_SITE_URL=http://localhost:2342/  # Canonical / public site URL
#      - PHOTOPRISM_SITE_TITLE=PhotoPrism
#      - PHOTOPRISM_SITE_CAPTION=Browse Your Life
#      - PHOTOPRISM_SITE_DESCRIPTION=
#      - PHOTOPRISM_SITE_AUTHOR=
#      - PHOTOPRISM_HTTP_HOST=0.0.0.0
#      - PHOTOPRISM_HTTP_PORT=2342
#      - PHOTOPRISM_SETTINGS_HIDDEN=false            # Users can not view or change settings
#      - PHOTOPRISM_DATABASE_DRIVER=sqlite           # SQLite is an embedded database that doesn't require a server
#      # - PHOTOPRISM_DATABASE_DRIVER=mysql          # Use MariaDB (or MySQL) instead of SQLite for improved performance
#      # - PHOTOPRISM_DATABASE_DSN=photoprism:insecure@tcp(mariadb:3306)/photoprism?charset=utf8mb4,utf8&parseTime=true
#      - PHOTOPRISM_SIDECAR_JSON=true                # Automatically create JSON sidecar files using Exiftool
#      - PHOTOPRISM_SIDECAR_YAML=true                # Automatically backup metadata to YAML sidecar files
#      - PHOTOPRISM_THUMB_FILTER=lanczos             # Resample filter, best to worst=blackman, lanczos, cubic, linear
#      - PHOTOPRISM_THUMB_UNCACHED=false             # Enable on-demand thumbnail rendering (high memory and cpu usage)
#      - PHOTOPRISM_THUMB_SIZE=2048                    # Pre-rendered thumbnail size limit (default 2048, min 720, max 7680)
#      # - PHOTOPRISM_THUMB_SIZE=4096                  # Retina 4K, DCI 4K (requires more storage); 7680 for 8K Ultra HD
#      - PHOTOPRISM_THUMB_SIZE_UNCACHED=7680           # On-demand rendering size limit (default 7680, min 720, max 7680)
#      - PHOTOPRISM_JPEG_SIZE=7680                     # Size limit for converted image files in pixels (720-30000)
#      - PHOTOPRISM_JPEG_QUALITY=92                    # Set to 95 for high-quality thumbnails (25-100)
#      - PHOTOPRISM_DARKTABLE_PRESETS=false          # Use darktable presets (disables concurrent raw to jpeg conversion)
#
#    volumes:
#      # Storage folder for settings, index & sidecar files (DON'T REMOVE):
#      - "~/.photoprism:/photoprism/storage"
#      # Your personal photo and video collection ([local path]:[container path]):
#      - "/media/data/BACKUP/MyPictures:/photoprism/originals/pic"
#      - "/media/data/home.video:/photoprism/originals/vid"
#      # Multiple folders can be indexed by mounting them as subfolders of /photoprism/originals:
#      # - "~/Family:/photoprism/originals/Family"    # [folder_1]:/photoprism/originals/[folder_1]
#      # - "~/Friends:/photoprism/originals/Friends"  # [folder_2]:/photoprism/originals/[folder_2]
#      # Mounting the import folder is optional (see docs):
#      - "/media/stock/Import:/photoprism/import"

# Uncomment the following lines to use MariaDB instead of SQLite for improved performance & scalability:
#
#  mariadb:
#    image: mariadb:10.5
#    restart: unless-stopped
#    command: mysqld --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=50
#    volumes:
#      - "/var/lib/mysql"
#    environment:
#      MYSQL_ROOT_PASSWORD: please-change
#      MYSQL_USER: photoprism
#      MYSQL_PASSWORD: insecure
#      MYSQL_DATABASE: photoprism

  ############################# MAINTENANCE

  # WatchTower - Automatic Docker Container Updates
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      TZ: $TZ
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_REMOVE_VOLUMES: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "false"
      WATCHTOWER_SCHEDULE: "0 30 14 * * *" # Everyday
      WATCHTOWER_NOTIFICATIONS: shoutrrr
      #WATCHTOWER_NOTIFICATION_URL: "telegram://$TGRAM_BOT_TOKEN@telegram?channels=$TGRAM_CHAT_ID"
      #WATCHTOWER_NOTIFICATIONS_LEVEL: info
      #DOCKER_HOST: tcp://socket-proxy:2375
      #DOCKER_API_VERSION: "1.39"

  anki:
    container_name: anki
    build:
      context: ./anki
    volumes:
      - /volume1/NetBackup/DATA/finance:/data/anki:/data
      - ${USERDIR}/work/anki-sync-server:/app
    restart: always
    ports:
      - 27701:27701

# ============= my stuff ======================
  minecraft:
    image: adoptopenjdk/openjdk16
    container_name: minecraft
    volumes:
      - "/volume1/NetBackup/MineCraft:/minecraft"
    command: ['/minecraft/run.sh']
    ports:
      - 25565:25565

  finance:
    container_name: finance
    build:
      context: ./finance
    volumes:
      - ${USERDIR}/work/home-server/docker/nas/finance:/finance
      - /volume1/NetBackup/DATA/finance:/data
    restart: always
    ports:
      - 8080:8080

